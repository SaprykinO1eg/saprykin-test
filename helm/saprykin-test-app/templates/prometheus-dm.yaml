apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.prometheusName }}
  name: {{ .Values.prometheusName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.prometheusName }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: {{ .Values.prometheusName }}
    spec:
      containers:
        - args:
            - --web.console.templates=/etc/prometheus/consoles
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=2h
            - --web.enable-lifecycle
          image: {{ .Values.imagePrometheus.repository }}:{{ .Values.imagePrometheus.tag }}
          imagePullPolicy: Always
          name: {{ .Values.prometheusName }}
          ports:
            - containerPort: {{ .Values.servicePrometheus.port }}
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /prometheus
              name: prometheus
            - mountPath: /etc/prometheus
              name: cm-{{ .Values.prometheusName }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: prometheus
        - name: cm-{{ .Values.prometheusName }}
          configMap:
            defaultMode: 420
            name: cm-{{ .Values.prometheusName }}